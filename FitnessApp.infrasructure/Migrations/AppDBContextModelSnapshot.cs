// <auto-generated />
using System;
using FitnessApp.infrasructure.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FitnessApp.infrasructure.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FitnessApp.Core.Domain.Models.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Admins");

                    b.HasDiscriminator().HasValue("Admin");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("FitnessApp.Core.Domain.Models.Level", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("steps")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Levels");
                });

            modelBuilder.Entity("FitnessApp.Core.Domain.Models.Nutrition_Plan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Calories")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Meals")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NutritionPlans");
                });

            modelBuilder.Entity("FitnessApp.Core.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<int>("LevelId")
                        .HasColumnType("int");

                    b.Property<string>("LevelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasDiscriminator().HasValue("User");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("FitnessApp.Core.Domain.Models.WorkoutVideo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LevelId")
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("level_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LevelId");

                    b.ToTable("Videos");
                });

            modelBuilder.Entity("FitnessApp.Core.Domain.Models.Supervisor", b =>
                {
                    b.HasBaseType("FitnessApp.Core.Domain.Models.Admin");

                    b.Property<int>("Experience_Years")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Supervisor");
                });

            modelBuilder.Entity("FitnessApp.Core.Domain.Models.Trainee", b =>
                {
                    b.HasBaseType("FitnessApp.Core.Domain.Models.User");

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Steps")
                        .HasColumnType("int");

                    b.Property<int?>("SupervisorId")
                        .HasColumnType("int");

                    b.Property<string>("Type_of_Training")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.HasIndex("SupervisorId");

                    b.HasDiscriminator().HasValue("Trainee");
                });

            modelBuilder.Entity("FitnessApp.Core.Domain.Models.Nutritionist", b =>
                {
                    b.HasBaseType("FitnessApp.Core.Domain.Models.Supervisor");

                    b.HasDiscriminator().HasValue("Nutritionist");
                });

            modelBuilder.Entity("FitnessApp.Core.Domain.Models.Trainer", b =>
                {
                    b.HasBaseType("FitnessApp.Core.Domain.Models.Supervisor");

                    b.HasDiscriminator().HasValue("Trainer");
                });

            modelBuilder.Entity("FitnessApp.Core.Domain.Models.WorkoutVideo", b =>
                {
                    b.HasOne("FitnessApp.Core.Domain.Models.Level", null)
                        .WithMany("workoutVideos")
                        .HasForeignKey("LevelId");
                });

            modelBuilder.Entity("FitnessApp.Core.Domain.Models.Trainee", b =>
                {
                    b.HasOne("FitnessApp.Core.Domain.Models.Supervisor", null)
                        .WithMany("trainees")
                        .HasForeignKey("SupervisorId");
                });

            modelBuilder.Entity("FitnessApp.Core.Domain.Models.Level", b =>
                {
                    b.Navigation("workoutVideos");
                });

            modelBuilder.Entity("FitnessApp.Core.Domain.Models.Supervisor", b =>
                {
                    b.Navigation("trainees");
                });
#pragma warning restore 612, 618
        }
    }
}
